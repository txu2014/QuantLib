Installation
------------

The following was tested on Mac OS X Intel (10.5.7 and 10.6.4) 
with gcc 4.0.1.

Install
1) OpenOffice.org 3.2.0 from http://download.openoffice.org
2) OpenOffice.org 3.2.0 SDK from http://download.openoffice.org/sdk 
(available for Linux, Solaris, Mac OS X Intel and Windows)

Environment variables
1) Ensure that SDK environment variables are set, e.g. by sourcing 
   the script setsdkenv_unix that is compiled during SDK
   installation. This involves in particular setting OO_SDK_HOME and 
   OO_SDK_OUT.
2) Set environment variables 
   QL_PATH, QA_PATH, OH_PATH, LG_PATH, respectively, to the full path 
   to the  
   QuantLib, QuantLibAddin, ObjectHandler, log4cxx 
   directories.

"make -f Makefile.ooo" should then compile and deploy the Calc addin 
so that the functions are available after next start of OpenOffice.org.

Notes
-----

The following files need to be provided here:

calcaddins.*pp
calcutils.*pp
conversions.*pp
init.*pp 
loop.hpp
qldefs.hpp

The remaining source code is (largely) generated by gensrc: 
- change to directory QuantLibAddin/gensrc
- execute 
  python ../../gensrc/gensrc.py -o --oh_dir=../../ObjectHandler

However, code generation is incomplete for 
- termstructures.cpp
- piecewiseyieldcurve.cpp
- ext_credit.cpp
so that temporary fixes to these three files (ending _fix.cpp) are 
provided as well for the time being (autogenerated files to be 
overwritten with "_fix.cpp" files), see also the todo's below.

  
Todo
----

1) Set environment variables via configure

2) Turn Makefile.ooo into Makefile.am

3) Maybe an OS X specific issue: When linking libQuantLibAddin.dylib
   dynamically to CalcAddins.uno.dylib, then Calc crashes latest 
   when trying to use one of the QL addins.
   It works when linking the archive libQuantLibAddin.a instead.

4) Test compilation on Linux

5) Further development of gensrc and/or conversions for Calc:

  a) calcToVector for std::vector<ObjectHandler::property_t> yields
     a vector of length one even if the sequence in Calc is empty;
     this affects e.g. jumps and jump dates in file
     Addins/Calc/piecewiseyieldcurve.cpp, see code following 
     "FIXME" there.

  b) QLA::CoerceTermStructure<QLA::TermStructure,QL::TermStructure>
     fails for HazardRateCurve and PiecewiseFlatHazardRateCurve, see
     Addins/Calc/termstructure.cpp and code following "FIXME" there
     with a "pedestrian" coerce that works for the special cases.  

  c) QLA::CoerceHandle<QL::DefaultProbabilityTermStructure>() fails,
     see Addins/Calc/ext_credit.cpp, function qlMidPointCdsEngine()
     for a "pedestrian" fix.

  d) Expose more addin functions (beyond constructors) to Calc and 
     address any conversion/gensrc issues that arise (such as 
     returning vectors to Calc etc.)
